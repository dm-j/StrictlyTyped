//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StrictlyTyped.Generator.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("StrictlyTyped.Generator.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #nullable restore.
        /// </summary>
        internal static string AutoGeneratedFooter {
            get {
                return ResourceManager.GetString("AutoGeneratedFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /// //     This code was generated by the StrictlyTyped source generator
        /// //
        /// //     Changes to this file may cause incorrect behavior and will be lost if
        /// //     the code is regenerated.
        /// // &lt;/auto-generated&gt;
        /// //------------------------------------------------------------------------------
        ///#nullable enable.
        /// </summary>
        internal static string AutoGeneratedHeader {
            get {
                return ResourceManager.GetString("AutoGeneratedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [global::System.Diagnostics.DebuggerDisplay(&quot;{Value}&quot;)]
        ///[global::System.ComponentModel.TypeConverter(typeof(Converter))]
        ///[global::System.Text.Json.Serialization.JsonConverter(typeof(SystemJsonConverter))]
        ///#if (USE_NEWTONSOFT_JSON)
        ///[global::Newtonsoft.Json.JsonConverter(typeof(NewtonsoftJsonConverter))]
        ///#endif
        ///public readonly partial record struct STRICT_TYPE : global::StrictlyTyped.IStrictBASE_TYPE_INFORMAL_NAME&lt;STRICT_TYPE&gt;
        ///{
        ///#region Value
        ///
        ///    [global::System.Diagnostics.CodeAnalysis.DisallowNul [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SignedNumberTemplate {
            get {
                return ResourceManager.GetString("SignedNumberTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [global::System.Diagnostics.DebuggerDisplay(&quot;{Value}&quot;)]
        ///[global::System.ComponentModel.TypeConverter(typeof(Converter))]
        ///[global::System.Text.Json.Serialization.JsonConverter(typeof(SystemJsonConverter))]
        ///#if (USE_NEWTONSOFT_JSON)
        ///[global::Newtonsoft.Json.JsonConverter(typeof(NewtonsoftJsonConverter))]
        ///#endif
        ///public readonly partial record struct STRICT_TYPE : global::StrictlyTyped.IStrictBool&lt;STRICT_TYPE&gt;
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Gets the &lt;see cref=&quot;global::System.Boolean&quot;/&gt; value of the &lt;see c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StrictBoolTemplate {
            get {
                return ResourceManager.GetString("StrictBoolTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /// &lt;summary&gt;
        /// /// Represents a Strictly-typed record struct for a DateOnly value
        /// /// &lt;/summary&gt;
        /// /// &lt;remarks&gt;
        /// /// This struct is immutable and can be used for performance-sensitive scenarios that require
        /// /// type safety and minimal allocations. It implements the &lt;see cref=&quot;global::StrictlyTyped.IStrictDateOnly{T}&quot;/&gt; interface
        /// /// for Strict typing and can be used with the &lt;see cref=&quot;global::StrictlyTyped&quot;/&gt; library.
        /// /// &lt;/remarks&gt;
        ///[global::System.Diagnostics.DebuggerDisplay(&quot;{Value.Year}/{Value.Mont [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StrictDateOnlyTemplate {
            get {
                return ResourceManager.GetString("StrictDateOnlyTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //[global::System.Diagnostics.DebuggerDisplay(&quot;{Value}&quot;)]
        /// //[global::System.ComponentModel.TypeConverter(typeof(Converter))]
        /// //[global::System.Text.Json.Serialization.JsonConverter(typeof(global::StrictlyTyped.Internal.StrictDateTimeSystemJsonConverterFactory))]
        /// //#if (USE_NEWTONSOFT_JSON)
        /// //[global::Newtonsoft.Json.JsonConverter(typeof(NewtonsoftSTRICT_TYPEJsonConverter))]
        /// //#endif
        /// //public readonly partial record struct STRICT_TYPE&lt;TTimeZone&gt; : global::StrictlyTyped.IStrictDateTime&lt;STRICT_TYPE&lt;TTime [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StrictDateTimeTemplate {
            get {
                return ResourceManager.GetString("StrictDateTimeTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /// &lt;summary&gt;
        /// /// Represents a strictly typed structure encapsulating a &lt;see cref=&quot;System.Guid&quot;/&gt; value.
        /// /// &lt;/summary&gt;
        /// /// &lt;remarks&gt;
        /// /// &lt;c&gt;STRICT_TYPE&lt;/c&gt; is a record struct that provides strict typing for a &lt;see cref=&quot;System.Guid&quot;/&gt; value, 
        /// /// ensuring type safety and clear semantics in the application. It implements the &lt;see cref=&quot;global::StrictlyTyped.IStrictGuid{STRICT_TYPE}&quot;/&gt; 
        /// /// interface, providing a standardized way to work with Guid values within a strict type system.
        /// /// This struct is [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StrictGuidTemplate {
            get {
                return ResourceManager.GetString("StrictGuidTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /// &lt;summary&gt;
        /// /// Represents a Strictly-typed record struct for a string value
        /// /// &lt;/summary&gt;
        /// /// &lt;remarks&gt;
        /// /// This struct is immutable and can be used for performance-sensitive scenarios that require
        /// /// type safety and minimal allocations. It implements the &lt;see cref=&quot;global::StrictlyTyped.IStrictString{T}&quot;/&gt; interface
        /// /// for Strict typing and can be used with the &lt;see cref=&quot;global::StrictlyTyped&quot;/&gt; library.
        /// /// &lt;/remarks&gt;
        ///[global::System.Diagnostics.DebuggerDisplay(&quot;{Value}&quot;)]
        ///[global::System. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StrictStringTemplate {
            get {
                return ResourceManager.GetString("StrictStringTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StronglyTyped.StrongGuidAttribute.
        /// </summary>
        internal static string StrongGuidAttribute {
            get {
                return ResourceManager.GetString("StrongGuidAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [global::System.Diagnostics.DebuggerDisplay(&quot;{Value}&quot;)]
        ///[global::System.ComponentModel.TypeConverter(typeof(Converter))]
        ///[global::System.Text.Json.Serialization.JsonConverter(typeof(SystemJsonConverter))]
        ///#if (USE_NEWTONSOFT_JSON)
        ///[global::Newtonsoft.Json.JsonConverter(typeof(NewtonsoftJsonConverter))]
        ///#endif
        ///public readonly partial record struct STRICT_TYPE : global::StrictlyTyped.IStrictBASE_TYPE_INFORMAL_NAME&lt;STRICT_TYPE&gt;
        ///{
        ///#region Value
        ///
        ///    [global::System.Diagnostics.CodeAnalysis.DisallowNul [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsignedNumberTemplate {
            get {
                return ResourceManager.GetString("UnsignedNumberTemplate", resourceCulture);
            }
        }
    }
}
